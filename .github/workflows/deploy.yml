name: deploy envinronment

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'dev or staging'
        required: true

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TF_VAR_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
  TF_VAR_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: set default enevironment
        run: |
          if [ ! -z $INPUT ]
          then
            echo "DEPLOYMENT_ENV=$INPUT" >> $GITHUB_ENV
          elif [ $GITHUB_EVENT_NAME = "push" ]
          then
            echo "DEPLOYMENT_ENV=staging" >> $GITHUB_ENV
          else
            echo "DEPLOYMENT_ENV=dev" >> $GITHUB_ENV
          fi
        env:
          INPUT: ${{ github.event.inputs.environment }}

      - name: read terraform_version
        id: terraform_version
        uses: juliangruber/read-file-action@v1
        with:
          path: .terraform-version

      - name: set default enevironment
        run: echo "echo 'deploy to ${{ env.DEPLOYMENT_ENV }}'"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ steps.terraform_version.outputs.content }}

      - name: start deployment
        uses: bobheadxi/deployments@v0.4.3
        id: deployment
        with:
          step: start
          token: ${{ secrets.GITHUB_TOKEN }}
          env: ${{ env.DEPLOYMENT_ENV }}

      - name: make deploy
        run: make

      - name: update deployment status
        uses: bobheadxi/deployments@v0.4.3
        if: always()
        with:
          step: finish
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
